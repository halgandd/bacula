2002-06-12 Release 1.21
- Fixed several problems with filenames being truncated if
  they contain spaces. Thanks to the user that reported this.
- N.B. To get the new queries, after the "make" and 
  "make install" you must explicitly replace the
  existing query.sql by query.sql.new.  query.sql is a
  user configuration file, so it is not overwritten.
- Added GZIP compression of Included files.  
- Added additional fields to tape SOS record permitting better
  recovery with no database.
- Be sure to remove any !terminate statements you may have
  in your config files.
- MUST UPDATE ALL DAEMONS due to protocol change to handle new
  tape format.

  From kes11Jun02:
- Updated examples directory with my most recent config files.
- Modified the M_TERM meaning to mean that Bacula has
  terminated in error without producing a dump. Previously,
  it meant that Bacula terminate (with or without error).
  You should remove any !terminate from your messages
  resources.
- Changed the order of the libraries in the link so that
  tcp wrappers link properly. Thanks Phil for reporting this.
- A user reported that filenames containing spaces were truncated
  in bextract. This was indeed the case. They were also truncated
  in Restore as well as in Verify. They are, hopefully, all fixed
  now.
- Made a few error conditions in Verify non-fatal.
- Modified the Console "query" command to permit multiple SQL
  statements per command. 
- Implemented three new "query" options: 
    List last 10 Full Backups for a Client
    List Volumes used by selected JobId
    List Volumes to Restore All Files
  To use them, simply type "query" to the Console program, and
  select the one you want.
- Modified bextract to default to extracting all files (i.e. /).
- Cleaned up the code in bextract a bit.

  From kes03Jun02:
- Improve Verify command to include files examined.
- Eliminate fcntl() locking of the console file and replaced
  it with a pthreads mutex.
- Note Director - SD protocol is changed to handle new tape
  information (Fileset, JobType, JobLevel).
- Create config.out that contains a summary of ./configure
  to see what you previously configured: "cat config.out"
- Implemented GZIP compression.  Added addition syntax to
  Include { } resource to permit setting of any GZIP compression
  level:
     compression=GZIP
     compression=GZIP1
     ...
     compression=GZIP9

  Level 1 is minimum compression and level 9 is maximum. Using just
  GZIP gives the default (level 6).
- Enhanced the tape format to include the unique Job name, FileSetName,
  JobType, and JobLevel in the Start/End of Session records. The code
  detects that tape level difference and acts accordingly. You can 
  add data in the new format to old tapes.
- Fixed an incorrect display message in the prune command.
- Began implementation of Verify Volume and Verify Data.
- Cleaned up File daemon restore.c a bit ensuring that termination 
  cleanup is done and all possible Emsgs are converted to Jmsgs.
- Modify bls.c to use common setup routines. This reduced the big
  code duplication that creeped in when I added different listing
  options. Also, changing tapes is now handled uniformily in a subroutine.


2002-05-27 Release 1.20
- Started documenting Catalog Pruning and Recycling.
  Added catmaintenance.html and recycling.html
- Fixed the query command bug.
- Implemented PID files to prevent two copies of Bacula
  from running at the same time. Be sure you --with-pid-dir
  points to a working directory.
- Modified ASSERT() to cause a segmentation violation. This
  permits a core dump.
- Worked on gnome-console. It paints better, it tells you if it
  is ready to accept a command or processing one, and it is
  almost entirely GTK+ (rather than GNOME, I'm removing GNOME
  a bit at a time).
- Limit to 100 the number of tape labeling errors in a single Job.
- Add some additional ASSERT()s to the database routines. I don't
  like ASSERTs but they do catch bugs.
- Tested and debugged recycling of Volumes.  Needed to change
  the Director-SD protocol slightly.
- Removed the experimental SIGHUP in the Director as it is a
  potential source of errors.
- Added Level, Pool, Messages, and Storage keyword/value scanning
  to the Schedule Run record.
- Improved printing of Schedule resources with "show schedules"
- Do not autoprune Jobs/Files if the Job errs.
- Updated newvol() to pass back the updated Media record.   
- Fixed the "update pool" command, which was broken during a much
  earlier code reorganization.
- Improved a few of the pruning messages.
- Removed readline inclusions from gnome-console (hang over from console).
- Make Jmsg use daemon message handler if no message handler is defined.
  This is always the case in the SD and FD.
- Started removing __PROTO(). With C++ prototypes are manditory, so why
  keep around legacy code.
- Added a good deal of message internationalization -- more to be done.
- Move cached Path into mdb structure and use POOLMEM.
- Fix verify bug introduced last update causing incorrect diffs 
  by turning off autopruning.
- Started adding code to distinguish Errors from Fatal Errors.
- Errors are now counted in message.c for a Job.
- More POOLMEM cleanups.
- Implemented Automatic pruning.
- Implemented Automatic recycling of Volumes.
- Added PruneJobs/Files/Volumes=yes or no to Job resource. If set,
  it forces the specified pruning.
- Modified rwlock to accept multiple nested write lock
  requests.
- Modified the cats directory to use the new rwlock mechanism
  in place of P() and V(). 
- Defined db_lock(mdb) and db_unlock(mdb). They are in effect
  transaction locks. 
- Add CVS Id's to most files.
- Made first cut at AutoPrune
- Added new autoprune file that is called at the end of
  each Job. It then decides when and what to prune and
  calls the UA prune routines.
- Modified Run (in Schedule resource) to permit overrides of
  Level, Pool, Storage, and Messages. (not tested).
- Added more POOLMEM in place of char.
- Implemented daemon pid files. This prevents multiple 
  daemons from running simultaneously. You can run multiple
  daemons if they listen on different ports.
- Documented the Schedule resource a bit better.
- Began gently adding a POOLMEM type (perviously void).
  For the moment it is a #define to char, but long term
  it should be its own typedef.
- Corrected a bit of spacing on the status bar of gnome-console
- Added Admin and Archive Job types.
- Implemented multiple Messages resources. Each daemon has
  its own message resource, which defaults if not defined.
  Jobs may now have different message handlers.
- Cleaned up a bit of duplicate code in backup, verify, and
  restore by creating appropriate subroutines in job.c
- Added Type, Client, FileSet, and Level resource record
  definitions to the Director. These can be used in place
  of the Backup = ..., Verify = ..., ... commands.  This needs
  documenting.
- Corrected an incorrect message in the prune code and added
  the number of Files pruned in the message.
- Corrected several paint problems with gnome-console.
- Added a bit of printout in signal handler during traceback.
- Cleaned up most of sm_check() to be turned on/off by define
  in version.h

2002-05-10 Release 1.19
- Allow the user to select a new period for pruning.
- Lots of additions to the manual -- prune and purge
  commands documented.
- Applied Phil's configure.in fix for --prefix, ...
- Fixed bug found by Phil (patch supplied) in updating
  MD5 signatures (revert to 32 bit FileId, move "static"
  variables into JCR) (catreq.c fd-cmds.c).
- Reverted to using INTEGER for FileId in make_sql_tables
  due to a bug in MySQL.
- Change editing code to %d for FileId.
- Remove sqlite in make distclean in cats directory.
- Remove console.conf in console during make distclean.
- Remove gnome-console.conf during make distclean.
- Remove bacula-dir.conf during make distclean.
- Set default level when using Console if none specified.
  Bug reported by Phil.
- A simple . command from Console is ignored.   
- Change program named from filed to bacual-fd in winmain.cpp
- Change default config file for Win32 in winmain.cpp
- Free namebuf on early return from find_one.c. Bug reported by Phil.
- Modify testfind.c to dump orphaned buffers.
- Removed terabytes from parse_conf.c because of problems with
  older gcc compilers.
- Turn off gnome options in gnome-console by constructing empty argv.
- Fixes to Verify when only MD5 differs.
- Insert 0 for MD5 as default rather than space.
- Allow .messages "transparent" command while reading input
  in UserAgent server.
- In dird/verify.c ensure that correct filename is printed if only
  the MD5 differs. Minor reindenting caused large diff.
- Delete unused code from backup.c
- In filed/verify.c ensure that same algorithm as backup.c is used
  to pass back MD5 signatures -- especially for directories and files
  that cannot be read. Change dummy filename from X to *MD5-id*.
  This dummy value should never be printed.
- Make gnome-console poll Director every 5 seconds for output.
  This means that queued up messages are displayed at reasonable
  intervals. Delete some unused code hanging around from the tty
  console program.
- Begin implementation of prune commands.
- Add command line history to gnome-console. Not yet saved across sessions.
- Fixed some broken URLs in the manual.
- Added JobId type.
- Wrote first cut of "prune files" and "prune jobs".
- Added command line history to gnome-console 2500 lines max.
- Widened store_time() and associated variables to 64 bits using
  new btime_t definition.
- Removed GNOME about box and replaced it with 
  a somewhat crude Gtk+ about box in the gnome-console.
- Widened StartDay in the Job DB record to be 64 bits.
- Changed edit_uint_ to edit_uint64_ everywhere. Much more
  descriptive of what is done.
- Removed most llds and replaced them with %s and edit_uint64.
  This makes the code a bit easier to read for beginners.
- Added a btime_t typedef which is 64 bits wide.
- Added most of the code needed to do Purge and Prune of
  database. Not yet tested. Please do not use.
- Additional config options for Console.
- Started adding code for Automatic Recycling of Volumes.
- Allow arbitrary length filenames in Verify code.
- Fix incorrect filename in Verify code.
- Significant enhancement to number scanning in config parser.
- Requires initializing MySQL tables, or applying cats/alter.sql
  to modify Media table.
- Modified Makefile to printer a much more visible
  message if the make ends in error.
- Added the Purge value to the VolStatus in the Media table.
  This value is set if the Volume is purged.
- Enhanced the db_delete_media_record() routine to delete
  all associated records in the database.
- Modified Console to always write to the variable "output"       
  rather than stdout. This will permit directing output to a file.
- Enhanced the Console configuration file to have a Console 
  resource. This will allow us to add an rcfile and history file.
- Modified Find_next_vol in catreq.c to search for "Recycle"
  volumes if there are none marked Append. Also made Get_Vol_info
  return the VolStatus to the Storage daemon.
- Allow upper/lower case match on job level names.
- Added another warning message to the Console "delete media" command.
- Corrected a number of FileId types from uint64_t to FileId_t in
  ua_retention.c.
- In ua server close database before freeing JCR (because pointer is
  kept in ua and jcr structures).
- parse all numbers as doubles. Do lots of checking for valid number
  formats. Allow numbers in scientific form (e.g. 1.5e+10).
- Remove terabyte modifier as it doesn't work in some compilers.
- Fix bug in handling some modifiers.
- Added all necessary code for Recycle to Storage daemon. A Volume
  marked Recycle will now be overwritten.
- Filled out the prune command a bit and did some testing.
- Make console accept redirected input.
- Altered the Table definitions to include Recycle,
  FileRetention, JobRetention, and AutoPrune.
- Widened StartDay to 64 bits.
- Use JobId_t in more places. 
- Added the new table fields to the database record definitions.
- Changed Recycle from string to a binary quantity.
- Added a Version table with a VersionId to detect.
  future changes in the database. This should prevent
  a Bacula from working with a database that is not in sync.
- Modify Console to accept input from a file. This will permit
  the .read command and allow reading a .rc file.
- Added new retention and recycle variables to the Director's configuration.
- The UA subroutines or commands can now be called from core
  code because the output routines detect the absence of a 
  UA socket and direct output to the Job.
- Added a verbose flage to the ua packet to permit reduction of
  output while running a UA command (prune) from a Job.
- Did a fair amount of work on the prune command. Prune Volume now works.
- Purge Volume now works.
- Made last changes for integrating prune and purge commands.
- Add -ltermcap to CONS_LIBS when readline is configured.
  More work to be done to search for termcap.
- Added cats/drop_sqlite_tables.in, which will delete the SQLite database.
- Got CWEB working so that we can compile filesys.w and immortal.w
- Modified depkgs to include cweb.             
- Note, CWEB is not yet used by the core Bacula code.
- Made cats/alter.sql, which alters an old database to bring it
  up to the new format. This only works with MySQL since SQLite does
  not have the ALTER SQL command.
- Changed the old StartDay field in the db to be JobTDate, which is
  the latest time/date in widened Unix time format that the Job ran.
  This value is used when doing pruning.
- Added code in cats/sql.c to verify that the database internal version
  corresponds to the db version compiled in Bacula. It is set to 1 currently.
- Lots of changes to cats to bring the SQL up to date with the new 
  retention period changes.
- Added Console command code to permit changing a Volume's retention period.
- Removed old code that used date_encode() and replaced it with widened
  Unix time().
- Started modifying Message resource scanner so that we can have multiple
  message resources. Much more work to be done.
- Moved scanning for time into new library routine string_to_btime().

2002-04-22 Release 1.18
- Applied Phil's configure.in fix for --prefix, ...
- Fixed bug found by Phil (patch supplied) in updating
  MD5 signatures (revert to 32 bit FileId, move "static"
  variables into JCR) (catreq.c fd-cmds.c).
- Reverted to using INTEGER for FileId in make_sql_tables
  due to a bug in MySQL.
- Change editing code to %d for FileId.
- Remove sqlite in make distclean in cats directory.
- Remove console.conf in console during make distclean
- Remove gnome-console.conf during make distclean
- Remove bacula-dir.conf during make distclean
- Set default level when using Console if none specified.
  Bug reported by Phil.
- A simple . command from Console is ignored.   
- Change program named from filed to bacual-fd in winmain.cpp
- Change default config file for Win32 in winmain.cpp
- Free namebuf on early return from find_one.c. Bug reported by
  Phil.
- Modify testfind.c to dump orphaned buffers.
- Removed terabytes from parse_conf.c because of problems with
  older gcc compilers.
- Turn off gnome options in gnome-console by constructing empty
  argv.

2002-04-18 Release 1.17 Kern Sibbald
- Ensure that platforms Makefiles are called for clean  
  and distclean.
- Hide a lot of Makefile messages with @
- Applied Phil's configure.in patch. Thanks.
- Doc updates, many to clarify points brought up by Phil.
- Applied Phil's make_mysql_tables.in patch. Thanks.
- Made authenticate.c in dird test bnet_send status.
- Make label a bit more friendly with extra info message.
- Add level 200 to debug info in run command.
- Remove old code from findlib/testfind.c so that it compiles.
- Add two minute max wait to cram-md5 authentication. Hopefully,
  this will catch non-responding WinNT daemons.
- Allow time and size modifiers to be upper or lower case.
- Turn off old CYGWIN patch for pthread_cond_timedwait() bug that
  now causes File daemon hangs on WinNT.
- Fix mount messages for restore. Previous updates to save
  broke the restore code.
- By default write fixed block sizes rather than variable block
  sizes.  My Sony DAT simply does not work (reread failures) with
  variable block sizes.
- Data split across tapes was not being correctly restored
  (at least on DAT tapes). 
- Implement MaximumBlockSize and MinumBlockSize statements in
  Storage daemon so user can specify variable block sizes if
  desired.
- Return error if block checksum error on read (previously 
  ignored).
- Fixed some error messages in bls, and in some cases exit(1)
  rather than ABORT. There remain ABORTs to be examined.
- Made a local copy of tcpd.h and corrected the function 
  prototype problem for C++.

2002-04-14 First public release 1.16 Kern Sibbald
 - Many intervening changes/updates.

2001-09-29 Release 1.0 Kern Sibbald
 - Fixes to problems found at John's
   installation.
 - See techlogs/kes25Sep01 for details

2001-09-25 Release 1.0 Kern Sibbald
 - Helped John install at his site.
   He is backing up one Linux machine and
   one Win2000 machine.

2001-mm-dd Many releases
 - Released internally.
  
2000-04-09 Release 0.4 Kern Sibbald
 - Added a lot of Director configuration code. In      
   part (a small part), the Director now uses the
   bacula.conf file to know what to do. There still
   remains a lot to do.
 - The file search code is now integrated into the
   MySQL database routines, and Bacula is now hooked
   into the MySQL database (if so configured). Thus
   all the database records are being created, though
   there still remains some work in getting all the
   details into the records (such as the Storage 
   coordinates).
 - I've defined how Volume pools work (see manual).
 - I've defined error message handling though no code
   is yet written.
 - The following resources and records are implemented
   in the Director configuration file (bacula.conf):
    
   Director
     Name (passed to Storage daemon)
   Client
     Name, Address, Port
     Password (not yet used)
   Storage    
     Name, Address, Port, Password, MediaType
   Job
     Name    
     Type (not yet used)
     Backup (only one permitted) 
       Client, FileSet
     Storage
     Schedule, Messages, Pool (not used)
   FileSet
     Name  
     Include (options ignored)
     Exclude (no options)
   Schedule (not used)
     Name
   Messages (not used)
     Name       
     Debug, syslog, mail, append (not used)
   Catalog
     Name
     Address, Port, Password (not used)
   Pool (not used)
     Name
     PoolType, MediaType (not used)

 - Added Storage configuration routines.
   Director
     Name, password (verified against those sent by Director)
   Storage
     Name, Address, Port (address, port must correspond to Director's values)
     Password, MediaType
   Device
     Name, MediaType (must correspond to those sent by Director)
     Archive Device (defines device name)



2000-03-10 Release 0.3 Kern Sibbald
 - Implemented new base64 encoding for attributes.
   This eliminates some of the error messages in the
   sprintfs on the Solaris due to different stat() sizes.
 - Implemented  the first cut of the file search routines for
   the File daemon.  The exclusion lists work including wild
   cards.   There is a lot of work to be done, but the basic
   structure is now in place (wild cards do not yet work for
   the include).
 - Completed writing the memory pool code.  Now I must
   implement it in the daemons.
 - Modified the bacula start/stop script so that it has a
   better chance of working on SGI and Solaris.
 - The catalog code has not been converted to the new file
   search code.

2000-03-06 Release 0.2 Kern Sibbald
 - Integrated John's fixes.
 - Made Makefiles self configuring when Makefile.in is changed.
 - Added a runit script in the top level that runs bacula
 - Added a "bacula" script in the top level directory that
   starts and stops the File daemon and the Storage daemon.

2000-03-03 Release 0.1 Kern Sibbald
 - Basic Director, File, and Storage daemons.
   Standalone Catalog services using MySQL

2000-01-22 Kern Sibbald
   * Setup basic file structure with ./configure
