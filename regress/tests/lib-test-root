#!/bin/sh
#
# Run a simple backup of the Bacula build directory
#   then restore it.
#
echo " "
echo " "
echo " === /lib save/restore test ==="
echo " "
echo " "
if [ $UID != 0 ] ; then
   echo " "
   echo "You must be root to run this test."
   echo "  ===== Test5 failed!!! ===== "
   echo "  ===== Test5 failed!!! ===== " >>test.out
   echo " "
   exit 1
fi
cwd=`pwd`
scripts/copy-test-confs
echo "/lib" >/tmp/file-list
rm -rf /tmp/TestVolume001 /tmp/bacula-restores
bin/bacula stop 
bin/drop_sqlite_tables
bin/make_sqlite_tables
bin/bacula start
bin/console -c bin/console.conf <<END_OF_DATA
@output /dev/null
messages
label storage=File
TestVolume001
run job=NightlySave
yes
wait
messages
@# 
@# now do a restore
@#
restore
5
done
yes
@sleep 1
wait
messages
@output
quit
END_OF_DATA
bin/bacula stop
cd /
${cwd}/bin/testls -e ${cwd}/scripts/exclude-lib-test lib >${cwd}/tmp/original
cd /tmp/bacula-restores
${cwd}/bin/testls -e ${cwd}/scripts/exclude-lib-test lib >${cwd}/tmp/restored
diff ${cwd}/tmp/original ${cwd}/tmp/restored
if [ $? != 0 ] ; then
   echo " "
   echo " "
   echo "  ===== Test5 /lib failed!!! ===== "
   echo "  ===== Test5 failed!!! ===== " >>test.out
   echo " "
else
   echo "  ===== Test5 /lib OK ===== "
   echo "  ===== Test5 OK ===== " >>test.out
   rm -rf /tmp/bacula-restores ${cwd}/tmp/original ${cwd}/tmp/restored
   rm -rf /tmp/file-list /tmp/job /tmp/TestVolume001
fi
